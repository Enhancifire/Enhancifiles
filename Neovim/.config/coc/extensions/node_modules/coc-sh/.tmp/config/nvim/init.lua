vim.cmd [[
  call plug#begin('/Users/josa/github/josa42/coc-sh/.tmp/share/data/plugged')
  Plug 'josa42/theme-theonedark', { 'rtp': 'dist/vim' }
  Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug '/Users/josa/github/josa42/coc-sh'
  call plug#end()
]]

if vim.tbl_contains(vim.fn.getcompletion('', 'color'), 'theonedark') then
  vim.cmd('colorscheme theonedark')
end

vim.opt.encoding = 'utf-8'
vim.opt.hidden = true
vim.opt.backup = false
vim.opt.writebackup = false
vim.opt.cmdheight = 2
vim.opt.updatetime = 300
vim.opt.shortmess:append('c')
vim.opt.signcolumn = 'yes'
vim.opt.number = true
vim.opt.listchars = 'tab:» ,extends:›,precedes:‹,nbsp:·,space:·,trail:·'
vim.opt.list = true
vim.opt.tabstop = 2
vim.opt.softtabstop = 2
vim.opt.shiftwidth = 2
vim.opt.expandtab = false

vim.api.nvim_set_keymap('i', '<c-space>', 'coc#refresh()', { silent = true, expr = true })
vim.api.nvim_set_keymap('n', 'gd', '<Plug>(coc-definition)', { silent = true })
vim.api.nvim_set_keymap('n', 'gf', 'CocAction("format")', { silent = true, expr = true })

function _G.__coc()
  local info = vim.b.coc_diagnostic_info or {}
  local parts = {
    'E' .. (info.error or 0),
    'W' .. (info.warning or 0),
    (vim.g.coc_status or ''),
  }
  return vim.fn.join(parts, ' ')
end

vim.opt.statusline = '%{v:lua.__coc()}'
