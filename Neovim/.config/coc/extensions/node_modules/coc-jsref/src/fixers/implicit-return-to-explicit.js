"use strict";
exports.__esModule = true;
var Range = require("../range");
var Ast = require("../ast");
var Patch = require("../patch");
var fixer = {
    suggestCodeAction: function (params) {
        var j = params.j, ast = params.ast;
        var collection = ast.find(j.ArrowFunctionExpression, function (n) {
            return n.loc && Range.isInside(params.selection, n.loc) && j.Expression.check(n.body);
        });
        if (collection.size() !== 1) {
            return null;
        }
        var node = collection.nodes()[0];
        if (!node.loc) {
            return null;
        }
        return {
            title: "Use explicit return",
            data: node.loc.start
        };
    },
    createEdit: function (params) {
        var data = params.data, ast = params.ast, j = params.j;
        var node = Ast.findFirstNode(ast, j.ArrowFunctionExpression, function (n) { return Ast.isOnPosition(n, data); });
        if (!node) {
            return null;
        }
        var body = node.body;
        if (j.BlockStatement.check(body)) {
            return null;
        }
        var newNode = j.arrowFunctionExpression(node.params, j.blockStatement([j.returnStatement(body)]), false);
        newNode.async = node.async;
        return Patch.replaceNode(j, node, newNode);
    }
};
exports["default"] = fixer;
