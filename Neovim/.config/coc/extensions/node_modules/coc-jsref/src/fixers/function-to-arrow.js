"use strict";
exports.__esModule = true;
var Range = require("../range");
var Ast = require("../ast");
var Patch = require("../patch");
var fixer = {
    suggestCodeAction: function (params) {
        var j = params.j, ast = params.ast;
        var node = Ast.findFirstNode(ast, j.FunctionExpression, function (n) { return n.loc !== null && Range.isInside(params.selection, n.loc); });
        if (!node || !node.loc) {
            return null;
        }
        if (j(node).find(j.ThisExpression).length) {
            return null;
        }
        return {
            title: "Convert to arrow function",
            data: node.loc.start
        };
    },
    createEdit: function (params) {
        var data = params.data, ast = params.ast, j = params.j;
        var func = Ast.findFirstNode(ast, j.FunctionExpression, function (n) { return Ast.isOnPosition(n, data); });
        if (!func || func.generator) {
            return null;
        }
        var node = j.arrowFunctionExpression(func.params, func.body, false);
        node.async = func.async;
        return Patch.replaceNode(j, func, node);
    }
};
exports["default"] = fixer;
