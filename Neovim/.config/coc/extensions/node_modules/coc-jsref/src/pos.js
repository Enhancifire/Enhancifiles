"use strict";
exports.__esModule = true;
exports.nextLine = exports.isWithin = exports.isAfterOrSame = exports.isAfter = exports.isBeforeOrSame = exports.isBefore = exports.toProtocol = exports.fromProtocol = exports.create = void 0;
function create(line, column) {
    if (line < 1) {
        throw new Error("Can't create position with line < 1");
    }
    if (line < 0) {
        throw new Error("Can't create position with columnt < 0");
    }
    return { line: line, column: column };
}
exports.create = create;
function fromProtocol(p) {
    return {
        line: p.line + 1,
        column: p.character
    };
}
exports.fromProtocol = fromProtocol;
function toProtocol(p) {
    return {
        line: p.line - 1,
        character: p.column
    };
}
exports.toProtocol = toProtocol;
function isBefore(a, b) {
    return a.line < b.line || (a.line === b.line && a.column < b.column);
}
exports.isBefore = isBefore;
function isBeforeOrSame(a, b) {
    return a.line < b.line || (a.line === b.line && a.column <= b.column);
}
exports.isBeforeOrSame = isBeforeOrSame;
function isAfter(a, b) {
    return a.line > b.line || (a.line === b.line && a.column > b.column);
}
exports.isAfter = isAfter;
function isAfterOrSame(a, b) {
    return a.line > b.line || (a.line === b.line && a.column >= b.column);
}
exports.isAfterOrSame = isAfterOrSame;
function isWithin(a, start, end) {
    return isAfter(a, start) && isBefore(a, end);
}
exports.isWithin = isWithin;
function nextLine(a) {
    return create(a.line + 1, 0);
}
exports.nextLine = nextLine;
