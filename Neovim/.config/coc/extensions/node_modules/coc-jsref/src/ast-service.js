"use strict";
exports.__esModule = true;
var jscodeshift = require("jscodeshift");
// TODO add the rest
// https://github.com/facebook/jscodeshift#parser
// type LanguageId = 'javascript'
var AstService = /** @class */ (function () {
    function AstService(documents, logger) {
        this.documents = documents;
        this.logger = logger;
    }
    AstService.prototype.getAstTree = function (uri) {
        var j = this.getCodeShift(uri);
        if (!j) {
            return null;
        }
        var document = this.documents.get(uri);
        if (!document) {
            return null;
        }
        var source = document.getText();
        try {
            return j(source);
        }
        catch (e) {
            // Source is broken. Always when user typing
            return null;
        }
    };
    AstService.prototype.getCodeShift = function (uri) {
        var document = this.documents.get(uri);
        if (!document) {
            this.logger.error("No document found for uri: " + uri);
            return null;
        }
        var langId = document.languageId;
        if (langId === 'javascript' && isFlowCode(document.getText())) {
            return jscodeshift.withParser('flow');
        }
        if (langId === 'typescript') {
            return jscodeshift.withParser('ts');
        }
        if (langId === 'javascript') {
            return jscodeshift.withParser('babylon');
        }
        var errorMsg = langId + " is not supported";
        this.logger.error(errorMsg);
        return null;
    };
    return AstService;
}());
exports["default"] = AstService;
function isFlowCode(text) {
    return /\/\/[\t\ ]*@flow/.test(text);
}
